import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import 'bulma/css/bulma.css'
import Link from 'next/link'
import { useState, useEffect } from 'react'
// import {/*MoralisProvider,*/ useMoralis} from "react-moralis"
import { faucetAbi, faucetContractAddress, dexAbi, dexContractAddress } from '../constants'
import { Contract, ethers } from 'ethers'
import { Tab } from '@headlessui/react'


export default function lp() {

  const [isConnected, setIsConnected] = useState(false);
  const [provider, setProvider] = useState();
  const [signer, setSigner] = useState()
  const [faucetContract, setFaucetContract] = useState()
  const [getFaucetError, setGetFaucetError] = useState ('')
  const [address, setAddress] = useState()
  const [web3, setWeb3] = useState()
  const [bcContract, setBcContract] = useState()
  const [balance, setBalance] = useState("0")
  const [inputValue1, setInputvalue1] = useState()
  const [inputValue2, setInputvalue2] = useState()
  const [signerAddress, setSignerAddress] = useState()
  const [betPlayers, setBetPlayers] = useState([])
  const [totalValue, setTotalValue] = useState()
  const [toggleState, setToggleState] = useState(1)
  const [dexContract, setDexContract] = useState()
  const connect = async () => {
    if (typeof window !== "undefined" && typeof window.ethereum !== "undefined") {
      try {
        const accounts = await ethereum.request({method: "eth_requestAccounts"});
        setIsConnected(true)
        let connectedProvider = new ethers.providers.Web3Provider(window.ethereum)
        setProvider(connectedProvider)
        const _signer = connectedProvider.getSigner()
        setSigner(_signer)
        setSignerAddress(_signer.getAddress( ))
        setAddress(accounts[0])
        // setFaucetContract(new ethers.Contract( "0x12d6fa140cf5817393128e802e778c2ea3d30f26" , faucetAbi , provider ))
        // setDexContract(new ethers.Contract("0x51a78580a3d04c4fcf9f33c4ba6b611d467f55ab", dexAbi, provider))
        // console.log(`dex contract address: ${dexContract.getAddress()}`);
        setDexContract (new ethers.Contract("0x51a78580a3d04c4fcf9f33c4ba6b611d467f55ab", dexAbi, provider))
        console.log(_signer.getAddress( ));
        console.log(accounts[0]);
        
      } catch (e) {
        console.log(e);
      }
    } else {
      setIsConnected(false)
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Invesweet Pool</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className='box'>
          <div className="tabs  is-centered ">
            <ul className=''>
              <li><Link href='/swap'>Swap</Link></li>
              <li className="is-active"><a>Pool</a></li>
              <li><Link href='/faucet'>Faucet</Link></li>
            </ul>
          </div>
          <div className='box'>
            <label className="label">Deposit liquidity</label>
            <div className="control">
              <div className="navbar-item is-hoverable navbar-end ">
              </div>
              <input className="input mt-2" value={""} type="text" placeholder="Input USDC amount..." />
              <input className="input mt-2" value={""} type="text" placeholder="Input IST amount..." />
              <button onClick={''} className='button is-link mt-2 mr-2'>Approve</button>
              <button className='button is-link mt-2' disabled>Deposit</button>
            </div>
          </div>
          <div className='box'>
            <label className="label">Withdraw liquidity</label>
            <div className="control">
              <div className="navbar-item is-hoverable navbar-end ">
              </div>
              <input className="input mt-2" value={""} type="text" placeholder="Input USDC amount..." />
              <input className="input mt-2" value={""} type="text" placeholder="Input IST amount..." />
              <button className='button is-link mt-2 mr-2'>Approve</button>
              <button className='button is-link mt-2' disabled>Withdraw</button>
            </div>
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
